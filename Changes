New in Perlmacs 0.16:

    * Sync with Emacs 20.6.  Emacs 20.3 is no longer supported.

New in Perlmacs 0.15:

    * `perlmacs -d -MEmacs -emain' runs the interactive Perl debugger
      in Emacs mode.

    * Completed %ENV implementation.

New in Perlmacs 0.14:

    * Support Perl 5.6.0.  (Emacs 20.3 is still required.)

    * Bundle Emacs::Lisp with the distribution.

    * Fix behavior of special Perl variables STDOUT, %ENV, etc. when
      using Perl 5.6.0 ("print" inserts text in the buffer).

    * Temporarily removed 0.13 Lisp interface while working on a
      replacement.

New in Perlmacs 0.13:

    * Added many Lisp functions for conveniently accessing Perl data.

New in Perlmacs 0.12:

    * Perl coderefs now work with Lisp's eval, not just funcall.

    * Fixed a nasty bug affecting garbage collection after Lisp calls
      into Perl.

New in Perlmacs 0.11:

    * Fixed a bug affecting Perl code called from Lisp.

New in Perlmacs 0.10:

    * Wrapped the build process in a Perl module distribution.

    * \[1, 2, 3] behaves as a Lisp vector constructor.  Lisp vectors
      are converted to array-reference references [sic] and vice
      versa.

    * Rewrote parts of the startup and shutdown code to try to be
      robust.

New in Perlmacs 0.9.1:

    * Fixed a bug which resulted in core dumps during garbage
      collection when running a Perl interpreter under Pmacs.

New in Perlmacs 0.9:

    * Reimplemented exception model, eliminating most if not all
      exception-related coredumps.

    * Support for compiling with threaded Perl... but Emacs is not
      thread-safe and must never be used by more than one thread in a
      program.

    * Fixed a bug introduced in 0.8 that caused segv during garbage
      collection when running in Perl mode and storing Perl references
      in Lisp objects, e.g.

	  perlmacs -MEmacs::Lisp -e 'lisp [0]; &garbage_collect'

    * A Lisp error object that is propagated through a Perl frame and
      caught in an outer Lisp frame is no longer converted to a
      string.

    * New variable `perl-interpreter-args' specifies extra default
      argv elements for Perl initialization.  For example, put

	  (setq perl-interpreter-args '("-MEmacs::Lisp"))

      in ~/.emacs to load Emacs::Lisp whenever Perl is used in Pmacs.

    * Dumbed down the diff format to work with non-GNU patch.

New in Perlmacs 0.8:

    * Support for Emacs::Lisp 0.83, which allows direct access to Lisp
      objects and things like `$list->setcdr($list->cdr->cdr)'.

    * No longer uses MakeMaker to install Emacs headers.  Instead,
      they go in the Emacs installation tree.

    * No longer crashes when `goto' tries to cross a Lisp stack frame.

    * `perl.el' is loaded by default.

New in Perlmacs 0.7.1:

    * Fixed a major bug that caused duplicate free()'s.

New in Perlmacs 0.7:

    * Supports (and requires) Perl 5.005 or better, non-threaded.

    * Perl's malloc may be used.

    * Installation over GNU Emacs won't clobber Emacs' docfile.

    * More robust.  No longer crashes on `die', `signal', or `throw'
      across Lisp-to-Perl stack frames.  `goto' can still produce a
      crash, though.

    * Perl's `eval' catches Lisp errors.  Lisp's `condition-case' can
      catch Perl errors.

    * Arrayrefs become lists.  For example, the Perl expression

	  [1, 2, [3, 4], 5]

      if used as an argument to a Lisp function, would become a list
      with a sublist:

	  '(1 2 (3 4) 5)
